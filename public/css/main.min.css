.ov-h {
  overflow: hidden !important; }

.btn {
  text-align: center;
  font-family: "Roboto", Helvetica, sans-serif;
  padding: 0.75rem 2rem; }
  .btn:focus, .btn:active {
    outline: none;
    box-shadow: none; }

.t-checkbox {
  cursor: pointer;
  position: relative;
  display: flex;
  align-items: flex-start; }
  .t-checkbox__input {
    position: absolute;
    opacity: 0;
    visibility: hidden; }
    .t-checkbox__input:checked ~ .t-checkbox__mark {
      border-color: orange; }
      .t-checkbox__input:checked ~ .t-checkbox__mark:before {
        opacity: 1; }
  .t-checkbox__mark {
    width: 22px;
    height: 22px;
    flex-shrink: 0;
    border: 1px solid #f3f3f3;
    position: relative; }
    .t-checkbox__mark:before {
      content: '';
      position: absolute;
      /* Image */
      /* Color */
      width: calc(22px - 8px);
      height: calc(22px - 8px);
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: orange;
      opacity: 0; }
    .t-checkbox__mark:hover {
      border-color: #000000; }
  .t-checkbox__text {
    margin-left: 9px;
    flex: 1;
    font-size: 13px;
    line-height: 16px; }
    .t-checkbox__text a {
      text-decoration: underline; }

/* Hamburger */
.bt-burger {
  height: 34px;
  border: none; }
  .bt-burger__in {
    position: relative;
    height: 3px;
    width: 34px;
    background-color: #000000;
    display: block; }
    .bt-burger__in:before, .bt-burger__in:after {
      content: '';
      position: absolute;
      right: 0;
      width: 100%;
      height: 3px;
      background-color: #000000;
      display: block;
      transition: transform 0.2s ease-in-out; }
    .bt-burger__in:before {
      top: -11px; }
    .bt-burger__in:after {
      top: 11px; }
  .bt-burger.is-active .bt-burger__in {
    background-color: transparent; }
    .bt-burger.is-active .bt-burger__in:before, .bt-burger.is-active .bt-burger__in:after {
      width: 100%;
      top: 0; }
    .bt-burger.is-active .bt-burger__in:before {
      transform: rotate(-45deg); }
    .bt-burger.is-active .bt-burger__in:after {
      transform: rotate(45deg); }

.h-menu {
  display: flex;
  align-items: center; }
  .h-menu__item {
    margin-right: 1.5rem; }
    .h-menu__item:last-child {
      margin-right: 0; }

.logo {
  display: block; }

* {
  box-sizing: border-box; }
  *:after, *:before {
    box-sizing: border-box; }

::placeholder {
  color: #666666;
  opacity: 1; }

html {
  -webkit-font-smoothing: antialiased;
  font-size: 16px; }

body {
  min-width: 320px;
  font-family: "Roboto", Helvetica, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  overflow-x: hidden;
  margin: 0;
  position: relative; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

p {
  margin: 0; }

ul {
  list-style-type: none;
  margin: 0;
  padding: 0; }

a {
  transition: all 0.2s ease-in-out;
  text-decoration: none; }
  a:hover {
    text-decoration: none; }

img {
  max-width: 100%;
  vertical-align: middle; }

input, textarea, select {
  border: 1px solid #333333;
  background-color: #ffffff;
  outline: none;
  appearance: none;
  box-shadow: none;
  font-family: "Roboto", Helvetica, sans-serif; }

textarea {
  resize: none; }

button {
  border: 1px solid transparent;
  background-color: transparent;
  outline: none;
  padding: 0;
  border-radius: 0;
  appearance: none;
  transition: all 0.2s ease-in-out; }
  button:focus, button:active {
    outline: none;
    box-shadow: none; }

::selection {
  background-color: orange;
  color: #fff; }

label {
  margin: 0;
  display: block; }

iframe {
  max-width: 100%; }

a[href^="tel"],
a[href^="mailto"] {
  white-space: nowrap; }

a[href^="tel"] {
  pointer-events: none; }
  @media screen and (max-width: 991px) {
    a[href^="tel"] {
      pointer-events: all; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
